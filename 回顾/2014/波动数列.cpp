/*

标题：波动数列

    观察这个数列：
    1 3 0 2 -1 1 -2 ...

    这个数列中后一项总是比前一项
	增加2或者减少3。

    栋栋对这种数列很好奇，他想知道
	长度为 n 和为 s 而且后一项总是
	比前一项增加a或者减少b的整数数
	列可能有多少种呢？

【数据格式】
    输入的第一行包含四个整数 n s a b，
	含义如前面说述。
    输出一行，包含一个整数，表示满足条
	件的方案数。由于这个数很大，请输出
	方案数除以100000007的余数。

例如，输入：
4 10 2 3
程序应该输出：
2

【样例说明】
这两个数列分别是2 4 1 3和7 4 1 -2。

【数据规模与约定】
对于10%的数据，1<=n<=5，0<=s<=5，1<=a,b<=5；
对于30%的数据，1<=n<=30，0<=s<=30，1<=a,b<=30；
对于50%的数据，1<=n<=50，0<=s<=50，1<=a,b<=50；
对于70%的数据，1<=n<=100，0<=s<=500，1<=a, b<=50；
对于100%的数据，1<=n<=1000，-1,000,000,000<=s<=1,000,000,000，1<=a, b<=1,000,000。

资源约定：
峰值内存消耗 < 256M
CPU消耗  < 1000ms


请严格按要求输出，不要画蛇添足地打印类似：“请您输入...” 的多余内容。

所有代码放在同一个源文件中，调试通过后，拷贝提交该源码。

注意: main函数需要返回0
注意: 只使用ANSI C/ANSI C++ 标准，不要调用依赖于编译环境或操作系统的特殊函数。
注意: 所有依赖的函数必须明确地在源文件中 #include <xxx>， 不能通过工程设置而省略常用头文件。

提交时，注意选择所期望的编译器类型。


*/
#include<iostream>
using namespace std;
int ans=0;
int n,s,a,b;
int maxx(int i){
	return (n*a*(n-1))/2+n*i;
}
int minn(int i){
	return -(n*a*(n-1))/2+n*i;
}

void dfs(int d,int num,int to){

	
	if(num>n){
		return;
	}
	if(num==n&&to==s){
		ans++;
		ans%=100000007;
		return;
	}
	dfs(d+a,num+1,to+d+a);
	dfs(d-b,num+1,to+d-a);
	
}

int main(){
	cin>>n>>s>>a>>b;
	
	for(int i=-10000000;i<=10000000;i++){
		if(maxx(i)>=s&&minn(i)<=s){
			dfs(i,1,i);
		}
			
		
	}
	cout<<ans;
	return 0;
}

